module functions

language typescript
start symbol Declaration

test simple function [[
function() {
}
]] parse succeeds

test function one statement [[
function() {
	var a = 5;
}
]] parse succeeds

test function multiple statements [[
function() {
	var a = 5;
	const b = 5;
}
]] parse succeeds

test function with identifier [[
function foo() {
}
]] parse succeeds

test function with reserved keyword [[
function null() {
}
]] parse fails

test function with return type [[
function (): string {
}
]] parse succeeds

test function one argument [[
function (a) {
}
]] parse succeeds

test function multiple arguments [[
function (a, b) {
}
]] parse succeeds

test function multiple arguments trailing comma [[
function (a, b,) {
}
]] parse fails

test function multiple arguments with types [[
function (a: string, b: number) {
}
]] parse succeeds

test function with identifier [[
function bar(b: obj) {
}
]] parse succeeds

test recursive function definitions [[
function bar() {
  return function() {
    return function(a: number) {

    };
  };
}
]] parse succeeds

// TODO
//test function multiple arguments with types and accessibility modifier [[
//function (public a: string, private b: number) {
//}
//]] parse succeeds

// TODO
//test function multiple arguments with types last is optional [[
//function (public a: string, private b?: number) {
//}
//]] parse succeeds

test function with type parameters [[
function <A, B>() {
}
]] parse succeeds

test function with type parameters and name [[
function foo<A, B>() {
}
]] parse succeeds

test function with type parameters and extends [[
function foo<A extends number, B>() {
}
]] parse succeeds

test function with return [[
function foo(): number {
  return 5;
}
]] parse succeeds
