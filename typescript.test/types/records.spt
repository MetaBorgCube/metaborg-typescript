module record-lookup

language typescript
start symbol Program

test field lookup [[
const record = {
  foo: 5
}
const nu: number = record.foo;
]] 0 errors

test field lookup does not go to parent scope [[
const record = {
  foo: 5,
  bar: {
  }
}
const nu = record.bar.foo;
]] >= 1 errors

test can call on function in record [[
const record = {
  foo: function(a: number) {
    return a;
  }
}
const nu: number = record.foo(5);
]] 0 errors

test duplicate field declarations [[
const record = {
  foo: 5,
  foo: "asdf"
}
]] >= 1 errors


test assigning interfaces [[
interface B {
  foo: string
}
interface X {
  foo: string,
  bar: number
}
var a: X;
const b: B = a;
]] 0 errors

test assigning interfaces with incompatible types works it's a feature! [[
interface B {
  foo: number
}
interface X {
  foo: string,
  bar: number
}
var a: X;
const b: B = a;
]] 0 errors

test assigning interfaces with non-overlapping names fails [[
interface B {
  oo: string
}
interface X {
  foo: string,
  bar: number
}
var a: X;
const b: B = a;
]] 1 errors


