module Declarations

imports

  Classes
  Common
  Expressions
  Functions
  Names
  Statements
  Types

context-free syntax

  Declaration = InterfaceDeclaration
  Declaration = HoistableDeclaration
  Declaration = LexicalDeclaration
  Declaration = ClassDeclaration
  
  HoistableDeclaration.FunctionDeclaration = <<FunctionDeclaration><SemiColon?>>
  
  LexicalDeclaration.Lexical = <<LetOrConst> <{VariableDeclaration ","}+><SemiColon?>>
  
  LetOrConst.Let = <let>
  LetOrConst.Const = <const>
  
  VariableDeclaration.SimpleVariableDeclaration = <<BindingIdentifier> <TypeAnnotation?> <Initializer?>>
  
  Initializer.Initializer = <= <PrimaryExpression>>
  
//  TODO
//  InterfaceDeclaration.interface = <interface <BindingIdentifier><TypeParameters?><InterfaceExtendsClause?><ObjectType>>
  InterfaceDeclaration.Interface = <interface <BindingIdentifier><TypeParameters?><ObjectType><SemiColon?>>