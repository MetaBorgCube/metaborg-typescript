module Types

imports
  
  Common
  Names

context-free syntax

  PrimaryType = ObjectType
  
  ObjectType.Object = <{<TypeBody?>}>
  
  TypeBody = TypeMemberList
  TypeBody.SemiColon = <<TypeMemberList><SemiColon>>
  TypeBody.Comma = <<TypeMemberList><Comma>>
  
  TypeMemberList = TypeMember
  TypeMemberList.SemiColon = <<TypeMemberList><SemiColon><TypeMember>>
  TypeMemberList.Comma = <<TypeMemberList><Comma><TypeMember>>
  
  TypeMember = PropertySignature
  
  PropertySignature.Property = <<LiteralPropertyName><QuestionMark?><TypeAnnotation?>>
  
  TypeAnnotation.TypeAnnotation = <: <Type>>
  
  TypeParameters.TypeParameters = <\<<{TypeParameter ","}+>\>>
 
  TypeParameter.TypeParameter = <<BindingIdentifier> <Constraint?>>

  Constraint.Constraint = <extends <Type>>

  Type.Void = <void>
  Type.Number = <number>
  Type.Boolean = <boolean>
  Type.String = <string>
  Type = TypeID
  Type = ObjectType